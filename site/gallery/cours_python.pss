Introduction à Python
=====================

>    def hello():
>        print('bonjour tout le monde')
>    hello()

../..
Caractéristiques
================
- pratique plus que puriste
- accent sur la lisibilité
- typage fort, mais non déclaré
- coeur minimaliste, mais bibliothèque très étendue
../..
Popularité
==========
<img src='tiobe.png'>
../..
Popularité
==========
Projets créés sur Github en 2013

<pre>
Rank	Language      # Repositories Created
1	JavaScript    264131
2	Ruby          218812
3	Java          157618
4	PHP           114384
5	Python         95002
6	C++            78327
7	C              67706
8	Objective-C    36344
9	C#             32170
10	Shell          28561
</pre>
../..
Installation
============
Aller sur le [site](http://python.org) et suivre les instructions
../..
Ressources
==========
- la documentation Python : site, doc Windows
- forums : [comp.lang.python](https://groups.google.com/forum/?fromgroups#!forum/comp.lang.python), [comp.lang.python.fr](https://groups.google.com/forum/?fromgroups#!forum/fr.comp.lang.python)
- [stackoverflow](http://stackoverflow.com/)
../..
Commentaires
============
Introduits par #

    # this is the first comment
    SPAM = 1                 # and this is the second comment
                             # ... and now a third!
    STRING = "# This is not a comment."
../..
Définition de noms
==================

    width = 20
    height = 5*9
    x = y = z = 0
    tax = 0.125
    ht = 100.50
    ttc = ht * (1+tax)
    round(ttc, 2)
    >>> 113,06
../..
Chaines de caractères
=====================
Utilise ' ou "
    'spam eggs'
    'doesn\'t'
    "doesn't"
    '"Yes," he said.'
    "\"Yes,\" he said."
    '"Isn\'t," she said.'
../..
Chaines de caractères
=====================
\ pour continuer une ligne
    hello = "This is a rather long string containing\n\
    several lines of text just as you would do in C.\n\
        Note that whitespace at the beginning of the line is\
     significant."

""" sur plusieurs lignes
    print """
    Usage: thingy [OPTIONS]
         -h                        Display this usage message
         -H hostname               Hostname to connect to
    """
../..
Chaines de caractères
=====================
Mode par défaut :
    >>> word = 'a\nb'
    >>> print(word)
    a
    b
    
Mode brut :
    >>> word = r'a\nb'
    >>> print(word)
    a\nb
    
../..
Chaines de caractères
=====================
Concaténation par +, duplication par *

    word = 'Help' + 'A'
    word
    >>> 'HelpA'
    '<' + word*5 + '>'
    >>> '<HelpAHelpAHelpAHelpAHelpA>'
../..
Chaines de caractères
=====================
Accès à un caractère par index
------------------------------
     +---+---+---+---+---+
     | H | e | l | p | A |
     +---+---+---+---+---+
       0   1   2   3   4
      -5  -4  -3  -2  -1
            
    word[4]
    >>> 'A'
    word[-2]
    >>> 'p'
../..
Chaines de caractères
=====================
Tranches
--------
     +---+---+---+---+---+
     | H | e | l | p | A |
     +---+---+---+---+---+
     0   1   2   3   4   5
    -5  -4  -3  -2  -1
    word[0:2]
    >>> 'He'
    word[2:4]
    >>> 'lp'
    word[:2]
    >>> 'He'
    word[3:]
    >> 'pA'
../..
Chaines de caractères
=====================
Les chaines sont immuables
--------------------------

    word = 'HelpA'
    word[1]='a'
    >>> TypeError: 'str' object does not support item assignment
Longueur d'une chaine
---------------------

    word = 'anticonstitutionnellement'
    len(word)
    >>> 25
../..
Listes
======
    >>> a = ['spam', 'eggs', 100, 1234]
    >>> a
    ['spam', 'eggs', 100, 1234]

Accès par index ou par tranche

    >>> a[0]
    'spam'
    >>> a[3]
    1234
    >>> a[-2]
    100
    >>> a[1:-1]
    ['eggs', 100]

Concaténation par +, duplication par *

    >>> 3*a[:3] + ['Boo!']
    ['spam', 'eggs', 100, 'spam', 'eggs', 100, 'spam', 'eggs', 100, 'Boo!']        
